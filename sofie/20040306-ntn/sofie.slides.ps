%!PS-Adobe-2.0
%%Creator: dvips(k) 5.92b Copyright 2002 Radical Eye Software
%%Title: sofie.slides.dvi
%%Pages: 6
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Helvetica-Bold Helvetica Times-Roman CMSY10
%%+ Helvetica-BoldOblique
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t landscape sofie.slides
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.03.06:0845
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% File  8r.enc as of 2002-03-12 for PSNFSS 9
%
% This is the encoding vector for Type1 and TrueType fonts to be used
% with TeX.  This file is part of the PSNFSS bundle, version 9
% 
% Authors: S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry, W. Schmidt
%
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida + Euro.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (6) /Euro is assigned to 128, as in Windows ANSI
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /Euro /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: bbad153f.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsy10 cmsy5 cmsy6 cmsy7 cmsy8 cmsy9
%
/TeXbbad153fEncoding [
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /circlemultiply
/circledivide /circledot /circlecopyrt /openbullet /bullet
/equivasymptotic /equivalence /reflexsubset /reflexsuperset /lessequal
/greaterequal /precedesequal /followsequal /similar /approxequal
/propersubset /propersuperset /lessmuch /greatermuch /precedes /follows
/arrowleft /arrowright /arrowup /arrowdown /arrowboth /arrownortheast
/arrowsoutheast /similarequal /arrowdblleft /arrowdblright /arrowdblup
/arrowdbldown /arrowdblboth /arrownorthwest /arrowsouthwest /proportional
/prime /infinity /element /owner /triangle /triangleinv /negationslash
/mapsto /universal /existential /logicalnot /emptyset /Rfractur /Ifractur
/latticetop /perpendicular /aleph /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /union /intersection
/unionmulti /logicaland /logicalor /turnstileleft /turnstileright
/floorleft /floorright /ceilingleft /ceilingright /braceleft /braceright
/angbracketleft /angbracketright /bar /bardbl /arrowbothv /arrowdblbothv
/backslash /wreathproduct /radical /coproduct /nabla /integral
/unionsq /intersectionsq /subsetsqequal /supersetsqequal /section
/dagger /daggerdbl /paragraph /club /diamond /heart /spade /arrowleft
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /.notdef /.notdef
/circlemultiply /circledivide /circledot /circlecopyrt /openbullet
/bullet /equivasymptotic /equivalence /reflexsubset /reflexsuperset
/lessequal /greaterequal /precedesequal /followsequal /similar
/approxequal /propersubset /propersuperset /lessmuch /greatermuch
/precedes /follows /arrowleft /spade /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57036431151EC603C8BCFE359BBD953AD
5F3D998C6EE18EABCDD31D35C7E933DEA008418A4F0845FC9A361328AB270359
C974485C9BCBCB1E9EBBF3ACC647C4108F7E05961E22390303FD667A2294F500
7A085C407867265C38393D8FA18D463B16C49C07CA09E1048A18F4533CFCC1EE
E273BF86B08F6B348FF1F5DD2CBAD77008DAD28B68F1FBDC4FDD0FC35BACB988
63C6514C91EA3117AF9ABD93BCF74DC0E817A1EF512D1C2A525F535B2E38270A
FD7C98BD02212766742568F81B2F6A42EE21528AEBE4C47A6625C130F90FBFD9
0ADF67701B502D0211B848545620DB9746B01A3C7BBD0F0705BF18C20A766D6B
61FD368C104926053650E9C9C399E8F0146AB2C7646A327A11A293798CBF661F
4059C47B21CD0D6271C38228A0D2D579B08FE7293A67363974FB923BB51BA809
C9CEF768016EE60A45D4A3475E1410098A17D3C9415CCD98EA1D86941BF9D25F

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 55380996 39158280 1000 600 600 (sofie.slides.dvi)
@start /Fa 136[107 2[46 77 3[84 1[122 4[84 1[46 4[77
50[38 46[{ TeXBase1Encoding ReEncodeFont }9 137.733
/Helvetica-BoldOblique rf /Fb 134[69 69 99 69 77 38 69
46 1[77 77 77 115 31 1[31 31 77 1[38 77 77 69 77 77 10[92
5[92 1[99 9[99 17[77 77 1[38 1[46 38 80 33[46 6[69 2[{
 TeXBase1Encoding ReEncodeFont }34 137.733 /Helvetica
rf /Fc 136[107 77 84 46 77 54 1[84 84 84 122 38 77 38
38 84 84 46 77 84 77 1[77 10[92 5[92 1[99 2[99 6[99 1[99
99 6[46 7[77 77 1[38 38 46 35[46 6[84 2[{
 TeXBase1Encoding ReEncodeFont }36 137.733 /Helvetica-Bold
rf /Fd 105[92 1[83 25[83 92 92 129 92 101 55 92 64 1[101
101 101 147 46 92 1[46 101 101 55 92 101 92 101 92 8[110
3[101 110 119 1[110 2[138 101 2[46 1[129 1[110 119 119
13[92 92 92 92 92 92 1[46 55 46 41[101 2[{
 TeXBase1Encoding ReEncodeFont }48 165.272 /Helvetica-Bold
rf /Fe 201[64 64 64 64 64 64 49[{ TeXBase1Encoding ReEncodeFont }6
114.736 /Helvetica rf /Ff 231[129 8[83 15[{
 TeXbbad153fEncoding ReEncodeFont }2 165.272 /CMSY10
rf /Fg 107[55 55 24[83 83 83 119 83 92 46 83 55 1[92
92 92 138 37 83 37 37 92 92 46 92 92 83 92 92 8[110 156
1[119 101 110 119 1[110 129 119 138 92 110 1[46 1[129
1[110 119 119 110 110 6[46 3[92 1[92 1[92 1[92 46 46
55 46 2[55 55 37 35[83 83 2[{ TeXBase1Encoding ReEncodeFont }60
165.272 /Helvetica rf /Fh 139[66 110 77 1[121 121 121
1[55 110 1[55 121 2[110 2[121 110 12[121 132 14[143 65[121
2[{ TeXBase1Encoding ReEncodeFont }17 198.34 /Helvetica-Bold
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 @landscape end
%%EndSetup
%%Page: 1 1
TeXDict begin @landscape 1 0 bop Black Black 0 0 1 TeXcolorrgb
Black 0 0 1 TeXcolorrgb 1367 506 a Fh(The)56 b(DDT)g(annotations)991
708 y(in)g(the)f(parallel)i(So\002e)f(treebank)p Black
1369 1071 a Fg(Matthias)45 b(T)-20 b(r)n(autner)46 b(Kromann)653
1367 y(Lo)n(vik)e(meeting)h(of)h(the)f(Nordic)h(T)-20
b(reebank)45 b(Netw)n(or)r(k)1836 1568 y(March)g(6,)h(2004)1848
2595 y @beginspecial 9 @llx 110 @lly 257 @urx 324 @ury
1240 @rwi @setspecial
%%BeginDocument: figs/cmol-logo.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: /tmp/epstmp.$
%%Creator: Ghostscript ps2epsi from /tmp/epstmp.$
%%CreationDate: Aug 15 08:57
%%For:mtkromann mtkroman
%%Pages: 1
%%DocumentFonts: Times-Roman Helvetica
%%BoundingBox: 9 110 257 324
%%BeginPreview: 248 214 1 214
% 000000000000000000000000000000000007fffffffffff800000000000000
% 0000000000000000000000000000000000000000000000003b000000000000
% 000000000000000000000000000000007ffffffffe00007fff000000000000
% 000000000000000000000000000000006eeeeeeeeeeeeceeee000000000000
% 000000000000000000000000000000007ffffffffffffcfffe000000000000
% 000000000000000000000000000000002babababababa8abaa000000000000
% 000000000000000000000000000000007ffffffffffffcfffe000000000000
% 000000000000000000000000000000006eeeeeeeeeeeeceeee000000000000
% 000000000000000000000000000000007ffffffffffffdfffe000000000000
% 000000000000000000000000000000003abababababab8baba000000000000
% 000000000000000000000000000000007fff83fffffffdfffe000000000000
% 000000000000000000000000000000006eee82eeeeeeeceeee000000000000
% 000000000000000000000000000000007fff83fffffffdfffe000000000000
% 000000000000000000000000000000002bab83abababa9abaa000000000000
% 000000000000000000000000000000007fff83fffffffdfffe000000000000
% 000000000000000000000000000000006eee82eeeeeeeceeee000000000000
% 000000000000000000000000000000007fff83fffffffdfffe000000000000
% 000000000000000000000000000000003bba83babbbab9baba000000000000
% 000000000000000000000000000000007fff83fffffffdfffe000000000000
% 000000000000000000000000000000006eee82eeeeeeeceeee000000000000
% 000000000000000000000000000000007fff83fffffffdfffe000000000000
% 000000000000000000000000000000002bab83abababa9abaa000000000000
% 000000000000000000000000000000007fff83fffffffdfffe000000000000
% 000000000000000000000000000000006eee82eeeeeeeceeee000000000000
% 000000000000000000000000000000007fffc3fffffff9fffe000000000000
% 000000000000000000000000000000003aba82bababab8baba000000000000
% 000000000000000000000000000000007fffc3fffffff9fffe000000000000
% 000000000000000000000000000000006eeec2eeeeeee8eeec000000000000
% 000000000000000000000000000000007fffc3fffffff9fffc000000000000
% 000000000000000000000000000000002bab83abababa9aba8000000000000
% 000000000000000000000000000000007fffc3fffffff9fffc000000000000
% 000000000000000000000000000000006eeec2eeeeeee8eeec000000000000
% 000000000000000000000000000000007fffc3fffffff9fffc000000000000
% 000000000000000000000000000000003bba83babbbab9bab8000000000000
% 000000000000000000000000000000007fffc3fffffff9fffc000000000000
% 000000000000000000000000000000002eeec2eeeeeee8eeec000000000000
% 000000000000000000000000000000003fffc3fffffff9fffc000000000000
% 000000000000000000000000000000002bab83abababa9aba8000000000000
% 000000000000000000000000000000003fffc3fffffff9fffc000000000000
% 000000000000000000000000000000002eeec2eeeeeee8eeec000000000000
% 000000000000000000000000000000003fffc3fffffff9fffc000000000000
% 000000000000000000000000000000003aba82bababab8bab8000000000000
% 000000000000000000000000000000003fffc3fffffffbfffc000000000000
% 000000000000000000000000000000002eeec2eeeeeeeaeeec000000000000
% 000000000000000000000000000000003fffc01ffffffbfffc000000000000
% 000000000000000000000000000000002bab800001abababa8000000000000
% 000000000000000000000000000000003fffc00001fffbfffc000000000000
% 000000000000000000000000000000002eeec00000eeeaeeec000000000000
% 000000000000000000000000000000003ffff80001fffbfffc000000000000
% 000000000000000000000000000000003bbabbbab1babbbab8000000000000
% 000000000000000000000000000000003ffffffffffffbfffc000000000000
% 000000000000000000000000000000002eeeeeeeeeeeeaeeec000000000000
% 000000000000000000000000000000003ffffffffffffbfff8000000000000
% 000000000000000000000000000000002babababababababa8000000000000
% 000000000000000000000000000000003ffffffffffffbfff8000000000000
% 000000000000000000000000000000002eeeeeeeeeeeeaeee0000000000000
% 000000000000000000000000000000003ffffffffffffbff80000000000000
% 000000000000000000000000000000003abababababababa00000000000000
% 000000000000000000000000000000003ffffffffffffbf000000000000000
% 0000000000000000000000000000000000002eeeeeeee2c000000000000000
% 00000000000000000000000000000000178000007ffff30000000000000000
% 00000000000000000000000000000002aaaaaa800000a00000000000000000
% 0000000000000000000000000000007ffffffe000000010000000000000000
% 00000000000000000000000000000aaaaaaa8000000aaa8000000000000000
% 00000000000000000000000000037777777000000001777000000000000000
% 0000000000000000000003ba802aaaaaaa00000000002aaa00000000000000
% 000000000000000000003fffefffffffc000000000001fff80000000000000
% 00000000000000000000eeee2aaaaaa000000000000002aaa0000000000000
% 0000000000000000000ffffef7f7f6ff00000000000000f7f4000000000000
% 000000000000000000ababaaaaaa8ba8280000000000002aaa000000000000
% 000000000000000007fffffffffbffe1f80000000000000fffc00000000000
% 00000000000000002eeeeeeeaa6eee06e800000000000000aaa80000000000
% 0000000000000000003fffffcffff83ff80000000000000077760000000000
% 0000000000000002b00000bababaa0bab8000000000000000aaa8000000000
% 0000000000000003ffff00001fff07fff800000000000001fffffffc000000
% 0000000000000002eeeeeee000002eeee800000000000006eeaaaaeeeee000
% 0000000000000003ffffffffff80fffff80000000000001fffb776fffffffe
% 0000000000000003abababababa9ababa80000000000002babaaaaabababa8
% 0000000000000003fffffffffff9fffff8000000000000fffffdfffffffff1
% 0000000000000002eeeeeeeeeee8eeeee8000000000002eeeeee2aeeeeeee2
% 0000000000000003fffffffffff9fffff800000000000ffffffff6ffffffcf
% 0000000000000002bbbabbbabbb8bbbab80000000000003abbbabbbabbba9b
% 0000000000000003fe07fffffff9fffff80000000000600003fffffffffe3f
% 0000000000000002ee06eeeeeeeceeeee800000000006eee00002eeeeeec6e
% 0000000000000003fe03fffffffdfffff800000000007ffffff00001fff8ff
% 0000000000000003aa03abaa0ba9ababa800000000002babababab000003ab
% 0000000000000003fe03fffc07fdfffff800000000007ffffffffffff007fe
% 0000000000000000ee00eeec06eceeeee800000000006eeeeeeeeeeeeee6ee
% 0000000000000001ff01fffc07fdfffff800000000007fffffffffffffeffe
% 0000000000000000ba10bab802b8babab800000000003ababababababaaaba
% 0000000000000001ff10fff807fdfffff800000000007fffffffffffffeffe
% 0000000000000000ee08eee806eceeeee800000000006eeeeeeeeeeeeeeeee
% 0000000000000001ff08fff807fdfffff800000000007fffffffffffffeffe
% 0000000000000001ab082ba883a9ababa800000000002bababab800bababaa
% 0000000000000001ff0c7ff087fdfffff800000000007ffffffffc17ffeffe
% 0000000000000000ee0c6ee086eceeeee800000000006eeeeeee02e6eeceee
% 0000000000000001ff0c3ff087fdfffff800000000007fffffff002fffcffe
% 0000000000000000bb0a3bb083b8bbbab800000000003bbabbba202abb8aba
% 0000000000000001ff0e3fe187fdfffff800000000007ffffffe202fffcffc
% 0000000000000000ee0e0ee086eceeeee800000000006eeeeeee204eeeceec
% 0000000000000001ff0f1fe1c7fdfffff80000000000fffffffe204fffcffc
% 0000000000000001ab0b0ba383a9ababa80000000000abababaa200bab8ba8
% 0000000000000001ff0f0fc3c7fdfffff80000000000fffffffe204fffcffc
% 0000000000000000ee0e8ec2c2eceeeee80000000000eeeeeeee2e4eeeceec
% 0000000000000000ff0f8fc3c3fdfffff80000000000fffffffe0c47ffdffc
% 0000000000000000ba8a828282b8babab80000000000babababaa03aba9ab8
% 0000000000000000ff8fc787c3fcfffff80000000000fffff1ffffffffdffc
% 0000000000000000ee8ec286c2eceeeee80000000000eeeec0a6eeaeeeceec
% 0000000000000000ff87c387c3fcfffff80000000000ffffff0bfff7ffdffc
% 0000000000000000ab83a38b83a8ababa80000000000abab80a3aba2838ba8
% 0000000000000000ff87e10fc3fcfffff80000000000ffff98d3fff1879ffc
% 0000000000000000ee86e00ec2eceeeee80000000000eeee88c2ee8eea8ee8
% 0000000000000000ff87f10fc3fcfffff80000000000ffff99d3ff800b9ff8
% 0000000000000000bb82b01a83b8bbbab80000000000bbba9992bb800b9ab8
% 0000000000000000ff87f81fc3fcfffff80000000000ffff95d3ff800b9ff8
% 0000000000000000ee86e80ec2eceeeee80000000000eeee86c2ee800a8ee8
% 0000000000000000ffc7f81fc3fcfffff80000000000ffff96d3ff80639ff8
% 0000000000000000ababa82ba3a8ababa80000000000abab8283ab8083aba8
% 0000000000000000ffffffbfe3fcffffe00000000000ffff8017ff22e3bff8
% 0000000000000000eeeeeeeee2eceeee800000000000eeeaee2eee0202aee8
% 0000000000000000fffffffffffcffff000000000000f877fff7ff0013bff8
% 00000000000000003ababababab8bab8000000000000b022baaaba8012bab8
% 00000000000000007ffffffffffcfff0000000000000effcffffffffffbff8
% 00000000000000006eeeeeeeeeeceee0000000000000e008eee080eeee2ee8
% 00000000000000007ffffffffffcff80000000000000e388fffe02ffff3ff0
% 000000030000000000ababababa8aa00000000000000a288aba1a8abab2ba0
% 0000001fff00003ff000fffffffcfc00000000000000e468ffe784ffff3ff0
% 000000eeeeee02aaaaa000eeeeeee000000000000000ec08eeecc4eeee2ee0
% 000003fffffe777777740000fffec000000000000000ec08fff844ffff3ff0
% 00000bbabb8aaaaaaa80000000ba8800000000000000a028bb9821babb3ab0
% 00007ffff7ffffffe000000000003e00000000000000e6c9ffd865ffff3ff0
% 0000eeeeeaaaaaa8c200000000002a80000000000000e2c8eec868eeee6ee0
% 0007ffffb7f7f7bf0e0000000000f7c0000000000000fc0fffccc9ffff7fc0
% 002bababaaaaa3a82a00000000002aa0000000000000ababab8389abab2b80
% 00fffffffffcfff0fe00000000001ff8000000000000ffffffc00bffff7f00
% 02eeeeeeeaaeeec2ee00000000000aaa000000000000eeeeeeae0eeeee6e00
% 1ffffffff7ffff0ffe00000000000377000000000000ffffffffffffff7e00
% 1abababababab83aba000000000000aa800000000000bababababababa3800
% 003ffffffffff0fffe0000000000007ff80000000001fffffffffffffe7800
% ec006eeeeeeee2eeee0000000000000aaae80000000000eeeeeeeeeeee6000
% fff800ffffff8ffffe0000000000001777fff80000000001fffffffffe6000
% ababa001abaa2babaa0000000000002aaa2baba00000000001abababaa2000
% ffffffe003f8fffffe000000000000fffffffffff00000000001fffffe4000
% eeeeeeeec002eeeeee000000000000ee2aaeeeeeeee00000000000eeee0000
% ffffffffff8fffffff000000000007fff777fffffffc000000000001fe0000
% bbbabbbabbaabbbabb00000000000bbaaaaabbbabbb8000000000000000000
% ffffffffffefffffff00000000003ffffbfefffffff3000000000000000000
% 6eeeeeeeeeeeeeeeee00000000006eeeeeaaeeeeeee6000000000000000000
% 7fff81ffffefffffff0000000001ffffff77ffffffcf000000000000000000
% 2baa002baba3ababab0000000003abababaaababab0b000000000000000000
% 7ffc000fffe7ffffff000000000fffffffe7fffffe3f000000000000000000
% 6ee80006eee6eeeeee000000000eeeeeeeeeeeeeec6e000000000000000000
% 7ff03f03ffe7ffffff000000001ffffffffffffff9ff000000000000000000
% 3ab03a80baa2bababa00000000003abababababab2ba000000000000000000
% 7ff0fff0ffe7ffffff00000000fc007fffffffffc7ff000000000000000000
% 6ee0eee0eee6eeeeee00000000eee800eeeeeeee8eee000000000000000000
% 3fe1fff87ff7ffffff00000000fffff001ffffff1fff000000000000000000
% 2ba1aba82ba3ababab00000000abababa003abaa2bab000000000000000000
% 3fe1fffc3ff7ffffff00000000ffffffffc007fcffff000000000000000000
% 2ee0eeec2ee6eeeeee00000000eeeeeeeeee8008eeee000000000000000000
% 3fe1ffff3ff7ffffff00000000ffffffffffff03ffff000000000000000000
% 3ba0bbbabbb2bbbabb00000000babbbabbbabbb2bbba000000000000000000
% 3fe1fffffff3ffffff00000000fffffffffffff3ffff000000000000000000
% 2ee0eeeeeee2eeeeee80000000eeeeeeeeeeeee2eeee000000000000000000
% 3fe1fffffff3ffffff80000000ffffc03ffffff3ffff000000000000000000
% 2ba1abababa3ababab80000000abab0003ababa3abaa000000000000000000
% 1ff1fffffff3ffffff80000000fffc0001fffff7fffe000000000000000000
% 0ee0eeeeeee2eeeeee80000000eee800006eeee6eeee000000000000000000
% 1ff0fffffff3ffffff80000000fff00fc03ffff7fffe000000000000000000
% 1ab8bababababababa80000000baa03ab81abab2baba000000000000000000
% 1ff87ffffffbffffff80000000ffe07ffc0ffff7fffe000000000000000000
% 0eec6eee0eeaeeeeee80000000eec0eeee06eee6eeee000000000000000000
% 1ffc3fff0ffbffffff80000000ffc1ffff83fff7fffe000000000000000000
% 0baa2bab0babababab80000000ab81abab83aba3abaa000000000000000000
% 1ffe1fff0ffbffffff800000007fc3ffffc1fff7fffe000000000000000000
% 0eee0eee0eeaeeeeee800000006e82eeeee0eee6eeee000000000000000000
% 0fff83fe0ff9ffffff000000007f83fffff0fff7fffe000000000000000000
% 0bba81b81bb8bbbaba000000003a83babbb0bbb2bbba000000000000000000
% 0fffe0001ff9fffff8000000007f83fffff07ff7fffe000000000000000000
% 0eeee0002ee8eeeee0000000006e82eeeee86ee6eeee000000000000000000
% 0ffffc007ff9ffffc0000000007f83fffff87ff7fffe000000000000000000
% 0babab00aba9abab80000000002b83ababa82ba3abaa000000000000000000
% 0ffffffffff9fffe00000000007f83fffff83ff7fffe000000000000000000
% 0eeeeeeeeeeceeec00000000006ec2eeeee82ee6eeee000000000000000000
% 07fffffffffdfff000000000007fc3fffffc3ff7fffe000000000000000000
% 02babababab8baa000000000003a82babab83ab2baba000000000000000000
% 003ffffffffdff8000000000007fc1fffff83ff7fffe000000000000000000
% 0000eeeeeeecee0000000000006ee0eeeee82ee6eeee000000000000000000
% 00000ffffffdfc0000000000007fe0fffff83ff7fffe000000000000000000
% 0000002baba8a80000000000002ba0ababa82ba3abaa000000000000000000
% 00000001fffce00000000000007ff07ffff83ff7fffe000000000000000000
% 000000000eecc00000000000006ee82eeee06ee6eeee000000000000000000
% 00000000003c000000000000007ff83ffff07ff7fffe000000000000000000
% 000000000000000000000000003ab80abba03bb2bbb8000000000000000000
% 000000000000000000000000007ffe07ffc0fff7fff8000000000000000000
% 000000000000000000000000006eee00ee80eee6eee0000000000000000000
% 000000000000000000000000007fff803c01fff7ffe0000000000000000000
% 000000000000000000000000002baba00003aba3aba0000000000000000000
% 000000000000000000000000007ffff00007fff7ffc0000000000000000000
% 000000000000000000000000006eeeec000eeee6ee80000000000000000000
% 000000000000000000000000007fffffc07ffff7ff00000000000000000000
% 000000000000000000000000003abababababab2ba00000000000000000000
% 000000000000000000000000007ffffffffffff7fc00000000000000000000
% 000000000000000000000000006eeeeeeeeeeee6e800000000000000000000
% 000000000000000000000000007ffffffffffff7f000000000000000000000
% 0000000000000000000000000001abababababa3a000000000000000000000
% 000000000000000000000000000007ffffffffe7c000000000000000000000
% 0000000000000000000000000000002eeeeeeee6c000000000000000000000
% 00000000000000000000000000000001ffffffe78000000000000000000000
% 0000000000000000000000000000000003babba20000000000000000000000
% 00000000000000000000000000000000003fffe60000000000000000000000
% 000000000000000000000000000000000000eee40000000000000000000000
% 00000000000000000000000000000000000007e00000000000000000000000
% 00000000000000000000000000000000000000200000000000000000000000
%%EndImage
%%EndPreview
save countdictstack mark newpath /showpage {} def /setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%! psMath.pro (c) Aug 28, 1996 Matthias T. Kromann
/PSMsysd 200 dict def
/PSMusrd 200 dict def
/PSMtexd 200 dict def
/PSMinit
{	PSMtexd begin
	PSMsysd begin
	PSMusrd begin
	line-std
	Times setfontfamily 10 setfontsize 0 setfontstyle setupfont
} def
/PSMclose {end end end} def
/PSMreload {PSMclose (psm.pro) run PSMinit} def
/PSMni {(not implemented) =} def
PSMsysd begin
/bdef {bind def} bind def
/xdef {exch def} bdef
/lidef
	{	0 begin /ini xdef /vars xdef cvlit dup /value xdef
		length 3 add array /obj xdef
		/obj load 0 vars dict begin ini currentdict end put
		/obj load 1 {begin} putinterval
		/obj load 2 /value load putinterval
		/obj load dup length 1 sub {end} putinterval
		/obj load cvx end def
	} def
	/lidef load 0 4 dict put
/ldef {{} lidef} def
/pt {1 mul} def
/mm {2.845 mul} def
/cm {28.45 mul} def
/inch {72.27 mul} def
/un {1 mm mul} def
/black		{0 setgray} def
/white		{1 setgray} def
/gray		{0.5 setgray} def
/darkgray	{0.25 setgray} def
/lightgray	{0.75 setgray} def
/red		{1 0 0 setrgbcolor} def
/green		{0 1 0 setrgbcolor} def
/blue		{0 0 1 setrgbcolor} def
/cyan		{0 1 1 setrgbcolor} def
/magenta	{1 0 1 setrgbcolor} def
/yellow		{1 1 0 setrgbcolor} def
/gold		{0.93 0.93 0.4 setrgbcolor} def
/thin {0.5 setlinewidth} def
/medium {1 setlinewidth} def
/thick {2 setlinewidth} def
/lw-std {thin} def
/lw-dec {currentlinewidth 2 div setlinewidth} def
/lw-inc {currentlinewidth 2 mul setlinewidth} def
/nodash {[] 0 setdash} def
/dash {[2 2] 0 setdash} def
/line-std {lw-std nodash 0 setgray} def
PSMtexd begin
/ISOfont % font ISOfont
{	/isofont xdef /font xdef
	font findfont
	dup length dict begin
	   {1 index /FID ne {def} {pop pop} ifelse} forall
	   /Encoding ISOLatin1Encoding def
	   currentdict
	end
	isofont exch definefont pop
} 2 ldef
/Times-Roman /Times-Roman-ISOLatin1 ISOfont
/Times-Bold /Times-Bold-ISOLatin1 ISOfont
/Times-Italic /Times-Italic-ISOLatin1 ISOfont
/Times-BoldItalic /Times-BoldItalic-ISOLatin1 ISOfont
/Times [(ptm) /Times-Roman-ISOLatin1 /Times-Bold-ISOLatin1
	/Times-Italic-ISOLatin1 /Times-BoldItalic-ISOLatin1] def
/Helvetica /Helvetica-ISOLatin1 ISOfont
/Helvetica-Bold /Helvetica-Bold-ISOLatin1 ISOfont
/Helvetica-Oblique /Helvetica-Oblique-ISOLatin1 ISOfont
/Helvetica-BoldOblique /Helvetica-BoldOblique-ISOLatin1 ISOfont
/Helvetica [(phv) /Helvetica-ISOLatin1 /Helvetica-Bold-ISOLatin1
	/Helvetica-Oblique-ISOLatin1 /Helvetica-BoldOblique-ISOLatin1] def
/Symbol [(psy) /Symbol /Symbol /Symbol /Symbol] def
/getfontfamily {PSMtexd /fontfamily get} def
/setfontfamily {PSMtexd /fontfamily 3 -1 roll put} def
/getfontsize {PSMtexd /fontsize get} def
/setfontsize {PSMtexd /fontsize 3 -1 roll put} def
/getfontstyle {PSMtexd /fontstyle get} def
/setfontstyle {PSMtexd /fontstyle 3 -1 roll put} def
/setupfont
	{	font 0 getfontfamily 0 get putinterval
		font 3 getfontstyle 1 add 1000 mul fontsize cvi add
		fontext cvs putinterval
		PSMtexd font cvn known not
			{ 	PSMtexd font cvn getfontfamily getfontstyle 1 add get
					findfont getfontsize scalefont put
			} if
		font cvn cvx exec setfont
	} 2 {/font 7 string def /fontext 4 string def} lidef
end
/pi 3.1415926535 def
/sqr {dup mul} def
/sgn {dup 0 gt {pop 1} {0 lt {-1} {0} ifelse} ifelse} def
/min
	{	/B xdef /A xdef
		A type /arraytype eq {/a A 0 get def} {/a A def} ifelse
		B type /arraytype eq {/b B 0 get def} {/b B def} ifelse
		a b gt {B} {A} ifelse
	} 4 ldef
 /max
	 {	/B xdef /A xdef
 		A type /arraytype eq {/a A 0 get def} {/a A def} ifelse
 		B type /arraytype eq {/b B 0 get def} {/b B def} ifelse
 		a b gt {A} {B} ifelse
	 } 4 ldef
/acos {dup sqr 1 exch sub sqrt exch atan} def
/asin {dup sqr 1 exch sub sqrt atan} def
/extrema
	{	/fct xdef /t2 xdef /t1 xdef
		/t t1 def /ft t1 fct def
		1/T t1 def /fT t1 fct def
		t1 t2 t1 sub 200 div t2
			{	/x xdef /fx x fct def
				fx ft lt {/t x def /ft fx def} if
				fx fT gt {/T x def /fT fx def} if
			} for
		t T
	} 9 ldef
/p2r*
	{	/v xdef aload pop /phi xdef /r xdef
		phi cos r mul phi sin r mul v astore
	} 3 ldef
/p2r {2 array p2r*} def
/r2p*
	{	/v xdef aload pop /y xdef /x xdef
		x x mul y y mul add sqrt y x atan v astore
	} 3 ldef
/r2p {2 array r2p*} def
/rotpnt*
	{	/v xdef /angle xdef aload pop /y xdef /x xdef
			angle cos x mul angle sin y mul sub
			angle sin x mul angle cos y mul add v astore
	} 4 ldef
/rotpnt {2 array rotpnt*} def
/p2l*
	{	/v xdef aload pop /qy xdef /qx xdef aload pop /py xdef /px xdef
		/a py qy sub def /b qx px sub def
		a b a qx mul b qy mul add v astore
	} 7 ldef
/p2l {3 array p2l*} def
/l2p*
	{	/v xdef aload pop /c2 xdef /b2 xdef /a2 xdef
		aload pop /c1 xdef /b1 xdef /a1 xdef
		/det a1 b2 mul a2 b1 mul sub def
			c1 b2 mul c2 b1 mul sub det div
			a1 c2 mul a2 c1 mul sub det div
		v astore
	} 8 ldef
/l2p {2 array l2p*} def
/altitude*
	{	/r xdef /C xdef /B xdef /A xdef
		A B l p2l* pop
		A B v vsub* 90 v rotpnt* C v vadd* C m p2l* pop
		l m r l2p*
	} 7 {/v 2 array def /l 3 array def /m 3 array def} lidef
/altitude {2 array altitude*} def
/angle
	{	pnt2num /qy exch def /qx exch def
		pnt2num /py exch def /px exch def
		qy py sub qx px sub 2 copy abs exch abs add 0 eq
			{pop pop -360} {atan} ifelse
	} 4 ldef
/vaddsub*
	{	/addsub xdef /uv xdef /v xdef /u xdef /i 0 def
		u {v i get addsub /i i 1 add def} forall
		uv astore
	} 5 ldef
/vadd* {{add} vaddsub*} def
/vadd {dup length array {add} vaddsub*} def
/vsub* {{sub} vaddsub*} def
/vsub {dup length array {sub} vaddsub*} def
/smuldiv*
	{	/muldiv xdef /As xdef /A xdef /s xdef
		A {s muldiv} forall As astore
	} 4 ldef
/smul*
	{	3 1 roll dup type /arraytype eq not {exch} if
		3 -1 roll {mul} smuldiv*} def
/smul
	{	dup type /arraytype eq not {exch} if dup length array
		{mul} smuldiv*} def
/sdiv*
	{	3 1 roll dup type /arraytype eq not {exch} if
		3 -1 roll {div} smuldiv*} def
/sdiv
	{	dup type /arraytype eq not {exch} if dup length array
		{div} smuldiv*} def
/norm {0 exch {dup mul add} forall sqrt} def
/ip
	{	/B xdef /A xdef /i 0 def
		0 A {B i get mul add /i i 1 add def} forall
	} 3 ldef
/v2u* {exch dup norm 3 -1 roll sdiv*} def
/v2u {dup norm sdiv} def
/dist
	{	/B xdef /A xdef /i 0 def
		0 A {B i get sub dup mul add /i i 1 add def} forall sqrt
	} 3 ldef
/cp*
	{	/AxB xdef
		aload pop /b3 xdef /b2 xdef /b1 xdef
		aload pop /a3 xdef /a2 xdef /a1 xdef
			a2 b3 mul a3 b2 mul sub
			a3 b1 mul a1 b3 mul sub
			a1 b2 mul a2 b1 mul sub
			AxB astore
	} 7 ldef
/cp {3 array cp*} def
/tvec*
	{	/C xdef /B xdef /A xdef /t xdef /i 0 def
		A	{	dup B i get exch sub t mul add
				/i i 1 add def
			} forall
		C astore
	} 5 ldef
/tvec {dup length array tvec*} def
/nullmatrix
	{/n xdef /m xdef n {m array} repeat n array astore } 2 ldef
/mget {exch 3 1 roll get exch get} bdef
/mput {4 1 roll exch 4 1 roll get 3 1 roll put} bdef
/mstore
	{	/M xdef /i M length 1 sub def
		M length {M i get astore pop /i i 1 sub def} repeat
	} 2 ldef
/madd*
	{	/AB xdef /B xdef /A xdef
		0 1 A length 1 sub
			{/i xdef A i get B i get AB i get vadd* pop} for AB
	} 4 ldef
/madd
	{	/B xdef /A xdef A B A 0 get length B length nullmatrix madd*
	} 2 ldef
/msub*
	{	/AB xdef /B xdef /A xdef
		0 1 A length 1 sub
			{/i xdef A i get B i get AB i get vsub* pop} for AB
	} 4 ldef
/msub
	{	/B xdef /A xdef A B A 0 get length B length nullmatrix msub*
	} 2 ldef
/msmul*
	{	/Ms xdef dup type /arraytype eq {exch} if
		/s xdef /M xdef /i 0 def
		M {s Ms i get smul* pop /i i 1 add def} forall Ms
	} 5 ldef
/msmul
	{	dup type /arraytype eq not {exch} if /M xdef
		M M 0 get length M length nullmatrix msmul*
	} 1 ldef
/msdiv*
	{	/Ms xdef dup type /arraytype eq {exch} if
		/s xdef /M xdef /i 0 def
		M {s Ms i get sdiv* pop /i i 1 add def} forall Ms
	} 5 ldef
/msdiv
	{	dup type /arraytype eq not {exch} if /M xdef
		M M 0 get length M length nullmatrix msdiv*
	} 1 ldef
/mmul*
	{	/AB xdef /B xdef /A xdef
		/m A 0 get length def /n A length def /r B length def
		0 1 r 1 sub
		{	/j xdef
			0 1 m 1 sub
			{	/i xdef 0
				0 1 n 1 sub
					{ /k xdef A i k mget B k j mget mul add} for
			} for
		} for
		AB mstore AB
	} 9 ldef
/mmul
	{	/B xdef /A xdef A B A 0 get length B length nullmatrix mmul*
	} 2 ldef
/mvmul*
	{	/Mv xdef /v xdef /M xdef
		/m M 0 get length def /n M length def
		0 1 m 1 sub
		{ /i xdef 0
			0 1 n 1 sub
				{ /j xdef M i j mget v j get mul add
				} for
		} for
		Mv astore
	} 7 ldef
/mvmul {exch dup 0 get length array exch 3 1 roll mvmul*} def
/minv {PSMni} def
/minvmul {PSMni} def
/mtrace
	{	/M xdef /i 0 def
		0 M {i get add /i i 1 add def} forall
	} 2 ldef
/mtrans*
	{	/TM xdef /M xdef /m M 0 get length def /n M length def
		0 1 m 1 sub
			{ /i xdef
				0 1 n 1 sub {M i 3 -1 roll mget} for
			} for
		TM mstore TM
	} 5 ldef
/mtrans {/M xdef M M length M 0 get length nullmatrix mtrans*} 1 ldef
/m2v {/M xdef [M {aload pop} forall]} 1 ldef
/v2mc {1 array astore} def
/v2mr
	{	dup length /n xdef {1 array astore} forall n array astore
	} 1 ldef
/dot-size 1.5 def
/pnt2numx
	{	/n xdef n 1 sub index type exec
	} 5
	{	/integertype {} def /realtype {} def
		/arraytype
			{	n -1 roll dup
				0 get type /arraytype eq
				{	 0 get aload pop}
				{	 dup length 2 eq
					 { aload pop} { p 3D* aload pop} ifelse
				} ifelse
				n 1 add 2 roll
			 } def
		/p 2 array def
	} lidef
/pnt2num {1 pnt2numx} def
/pnt2vctx*
	{	/p xdef /n xdef n 1 sub index type exec
	} 5
	{	/integertype {n 1 add -2 roll p astore n 1 roll} def
		/realtype {integertype} def
		/arraytype
			{ 	n -1 roll dup
				0 get type /arraytype eq
				{	0 get }
				{	dup length 2 eq {} {p 3D*} ifelse
				} ifelse
				aload pop p astore n 1 roll
			 } def
	} lidef
/pnt2vctx {2 array pnt2vctx*} def
/pnt2vct* {1 exch pnt2vctx*} def
/pnt2vct {1 pnt2vctx} def
/-moveto /moveto load def
/-rmoveto /rmoveto load def
/-lineto /lineto load def
/-rlineto /rlineto load def
/-arc /arc load def
/-arcn /arcn load def
/-arcto /arcto load def
/-curveto /curveto load def
/-rcurveto /rcurveto load def
/Moveto {aload pop -moveto} def
/rMoveto {aload pop -rmoveto} def
/Lineto {aload pop -lineto} def
/rLineto {aload pop -rlineto} def
/moveto {pnt2num -moveto} def
/rmoveto {pnt2num -rmoveto} bdef
/lineto {pnt2num -lineto} bdef
/rlineto {pnt2num -rlineto} bdef
/line {pnt2num 3 pnt2numx 4 2 roll -moveto -lineto} def
/lines {dup 0 get moveto {lineto} forall} def
/xline
	{	/dB xdef /dA xdef B pnt2vct* pop A pnt2vct* pop
		B A BA vsub* BA v2u*
		dA neg A' smul* A A' vadd* Moveto
		BA dB B' smul* B B' vadd* Lineto
	} 9
	{	/A 2 array def /B 2 array def /BA 2 array def
		/A' 2 array def /B' 2 array def
	} lidef
/arc {4 pnt2numx -arc} def
/arcn {4 pnt2numx -arcn} def
/curve
	{	1 pnt2numx 3 pnt2numx 5 pnt2numx 7 pnt2numx
		8 -2 roll -moveto -curveto} def
/curveto {1 pnt2numx 3 pnt2numx 5 pnt2numx -curveto} def
/dotx {newpath pnt2num dot-size 0 360 -arc} def
/dot-bullet {gsave dotx fill grestore} def
/dot-circ {gsave dotx stroke grestore} def
/dot {dot-bullet} def
/perpsign
	{	/rsize xdef /B xdef /A xdef
		B A v vsub* v v2u* rsize v smul* pop
		v 90 h rotpnt* rsize sgn h smul* pop
		A Moveto h rlineto v rlineto h -1 smul rlineto
			closepath B lineto
	} 5 {/v 2 array def /h 2 array def} lidef
/turtle-init {PSMsysd /turtle-angle 3 -1 roll put Moveto pendown} def
/pendown {PSMsysd /turtle-state {rlineto} put} def
/penup {PSMsysd /turtle-state {rmoveto} put} def
/fwd
	{	dup PSMsysd /turtle-angle get dup 3 1 roll cos mul
		3 1 roll sin mul PSMsysd /turtle-state get exec
	} def
/bwd {neg fwd} def
/lht
	{	PSMsysd /turtle-angle get add PSMsysd /turtle-angle
		3 -1 roll put
	} def
/rht {neg lht} def
/box
	{	pnt2num /by xdef /bx xdef pnt2num /ay xdef /ax xdef
		ax ay -moveto ax by -lineto
		bx by -lineto bx ay -lineto closepath
	} 4 ldef
/circle {newpath 2 pnt2numx 0 360 -arc closepath} def
/ellipsearc
	{	newpath /a2 xdef /a1 xdef /yr xdef /xr xdef
		pnt2num /oy xdef /ox xdef
		/mtrx matrix currentmatrix def
		ox oy translate xr yr scale 0 0 1 a1 a2 -arc
		mtrx setmatrix
	} 7 ldef
/ellipse {0 360 ellipsearc closepath} def
/arrow {currentlinewidth 3.5 mm 40 0.7 arrowx} def
/varrow {currentlinewidth 2.5 mm 40 1 arrowx} def
/arcarrow {currentlinewidth 3.5 mm 45 0.7 arcarrowx} def
/varcarrow {currentlinewidth 2.5 mm 40 1 arcarrowx} def
/sarcarrow {currentlinewidth 2 mm 45 0.7 arcarrowx} def
/arrowx
	{	/rhead xdef 2 div /a xdef /hlen xdef 2 div /lw xdef
		head pnt2vct* pop tail pnt2vct* pop
		head tail vsub r2p aload pop /dir xdef
		/shaftl exch hlen rhead mul sub def
		/wingsz hlen a cos div def
		/lwing [wingsz dir 180 sub a sub] p2r head vadd def
		/rwing [wingsz dir 180 sub a add] p2r head vadd def
		/ltail [lw dir 90 add] p2r tail vadd def
		/rtail [lw dir 90 sub] p2r tail vadd def
		/lshaft	[shaftl dir] p2r ltail  vadd def
		/rshaft [shaftl dir] p2r rtail vadd def
		head  Moveto lwing  Lineto lshaft Lineto ltail Lineto
		rtail Lineto rshaft Lineto rwing  Lineto closepath
	} 16 {/head 2 array def /tail 2 array def} lidef
/arcarrowx
	{ 	/rhead xdef 2 div /a xdef /hlen xdef 2 div /lw xdef
		/ha xdef /ta xdef /r xdef O pnt2vct* pop
		ta ha gt /clockw xdef
		clockw {/hlen hlen neg def /lw lw neg def} if
		/head [r ha] p2r O vadd def
		/rheada 1 rhead add 0.5 mul def
		/ang 90 hlen rheada mul r div 28.6479 mul add def
		/wingsz hlen a cos div def
		/iwing [wingsz ha ang sub a sub] p2r head vadd def
		/owing [wingsz ha ang sub a add] p2r head vadd def
		/shafta ha hlen rhead mul r div 57.29578 mul sub def
		head Moveto iwing Lineto
		O aload pop r lw sub shafta ta clockw {-arc} {-arcn} ifelse
		O aload pop r lw add ta shafta clockw {-arcn} {-arc} ifelse
		owing Lineto closepath
	} 16 {/O 2 array def} lidef
/3Dinit
	{	PSMsysd begin
		/3Ddist xdef /3Dcenter xdef /3Dfocal xdef
		/3Dnormal 3Dfocal 3Dcenter vsub v2u def
		/3Dorigo 3Ddist 3Dnormal smul 3Dcenter vadd def
		/3Dex 3Dnormal [0 0 1] cp def
		3Dex norm 1e-8 lt
			{/3Dex [1 0 0] def} {/3Dex 3Dex v2u def} ifelse
		/3Dey 3Dex 3Dnormal cp def
		/3Dmatrix [3Dex 3Dey 3Dnormal] mtrans def
		end
	} def
/3D*
	{ /p' xdef /p xdef
		PSMsysd begin
		p 3Dcenter p" vsub*
		dup 3Dnormal ip p" sdiv*
		3Dnormal p" vsub*
		3Ddist p" smul*
		3Dmatrix exch p" mvmul*
		aload pop pop p' astore
		end
	} 3 {/p" 3 array def} lidef
/3D {2 array 3D*} def
/P2L*
	{	/line xdef /p' xdef /p xdef
		p' p p" vsub* aload pop
		p aload pop
		line astore
	} 4 {/p" 3 array def} lidef
/P2L {6 array P2L*} def
/LP2P*
	{	/p xdef aload pop /d xdef n astore pop aload pop
			p0 astore pop r astore pop
		/s d n p0 ip sub n r ip div def
		r s r smul*
		p0 p vadd*
	} 6 {/n 3 array def /r 3 array def /p0 3 array def} lidef
/LP2P {3 array LP2P*} def
/PL2P*
	{	/pi xdef aload pop p0 astore pop r astore pop /p xdef
		r p p0 n vsub*  n cp* aload pop
		n p0 ip
		pi astore
	} 6 {/n 3 array def /r 3 array def /p0 3 array def} lidef
/PL2P {4 array PL2P*} def
/s2r*
	{	/p xdef aload pop /theta xdef /phi xdef /r xdef
			r theta sin mul phi cos mul
			r theta sin mul phi sin mul
			r theta cos mul
		p astore
	} 4 ldef
/s2r {3 array s2r*} def
/r2s*
	{	/p xdef aload pop /z xdef /y xdef /x xdef
			x sqr y sqr add z sqr add sqrt
			y x atan
			dup y exch sin z mul atan
		p astore
	} 4 ldef
/r2s {3 array r2s*} def

end
%! psMath PostScript file

% Initialize
PSMinit
0.5 0.5 scale
300 300 translate
[0 0 0] [3 -7 3] 1000 3Dinit

% Invert colors
/invertcolors {
	/hhkblue load 
	/white load 
	/hhkblue xdef
	/white xdef
} def


% Draw cube: center dx dy dz => -
/cube {
	0.5 smul /dz xdef
	0.5 smul /dy xdef
	0.5 smul /dx xdef
	/center xdef

	/c000 center dx vsub dy vsub dz vsub def
	/c001 center dx vsub dy vsub dz vadd def
	/c010 center dx vsub dy vadd dz vsub def
	/c011 center dx vsub dy vadd dz vadd def
	/c100 center dx vadd dy vsub dz vsub def
	/c101 center dx vadd dy vsub dz vadd def
	/c110 center dx vadd dy vadd dz vsub def
	/c111 center dx vadd dy vadd dz vadd def

	[	[c000 c010 c110 c100] [c011 c001 c101 c111]
		[c000 c100 c101 c001] [c110 c010 c011 c111] 
		[c000 c001 c011 c010] [c101 c100 c110 c111] ] 
} 12 ldef

% Check inside/outside: face => 0/1
/outface {
	/face xdef
	/normal face 1 get face 0 get vsub 
		face 2 get face 1 get vsub cp v2u def
	/sight face 1 get 3Dcenter vsub v2u def
	sight normal ip 0 lt
} 3 ldef	
	
% Draw face: [x1 x2 ... xN] => -
/drawface {
	/face xdef
	face outface {
		face lines closepath
	} if
} 1 ldef

% Display text on front face of cube
/cubeshow {
	/pnt xdef
	/str xdef
	2 get /face xdef

	face outface {
		/O face 0 get 3D def
		/X face 1 get 3D def
		/Z face 3 get 3D def
		/XO X O vsub 0.1 smul def
		/ZO Z O vsub 0.1 smul def
		
		gsave
			[XO aload pop ZO aload pop O aload pop] concat
			pnt moveto
			str show
		grestore
	} if
} 8 ldef

% Finding corner of cube
/corner {0 get 0 get} def


% ----------------------------------------

% Define routines for computing edges between cubes
/left  {corner dx 0.5 smul vadd dy 0.5 smul vadd dz vadd} def
/right {left} def
/top {corner dx 0.5 smul vadd dy 0.5 smul vadd} def

% Routines for drawing cubes and edges
/drawcube 
{	{drawface} forall
	gsave hhkblue fill grestore 2 scaling mul setlinewidth 2
		setlinejoin white stroke
} def

/edge {
	gsave 1 setlinecap lines 
		gsave 11 scaling mul setlinewidth white stroke grestore
		10 scaling mul setlinewidth red stroke grestore	
} def

/3Dbbox % [ pnt1 ... pntN ] => [xmin xmax ymin ymax zmin zmax] 
{	/points xdef
	/point points 0 get def
	/bbox [point 0 get dup point 1 get dup point 2 get dup] def
	points {
		/point xdef

		% Process three axes
		0 1 2 {
			/axis xdef
			/offset axis 2 mul def
			/offset1 offset 1 add def

			% Minimum
			bbox offset 
				bbox offset get 
				point axis get min
				put

			% Maximum
			bbox offset1 
				bbox offset1 get
				point axis get max
				put
		} for
	} forall

	bbox
} 5 ldef

% Draw simple BRICL logo
/draw {
	% Initialize

	% Draw cubes and edges
	cube1 drawcube
	cube2 drawcube
		[cube1 left  cube3 top] edge
		[cube2 right cube3 top] edge
	cube3 drawcube
	cube4 drawcube
		[cube3 left  cube5 top] edge
		[cube4 right cube5 top] edge
	cube5 drawcube

	% Draw BRICL letters on front faces of cubes
	Helvetica setfontfamily 9 setfontsize setupfont white
	cube1 (C) [1.8 2] cubeshow
	cube3 (M) [1.5 2] cubeshow
	cube2 (O) [1.5 2] cubeshow
	cube5 (L) [2.5 2] cubeshow
} def

/drawshow {
	/depth depth 1 sub def

	depth 0 ge {
		gsave
		/O1 center4 center shrink smul vsub def
		O1 3D aload pop translate
		/scaling scaling shrink mul def
		shrink shrink scale
		invertcolors
		
		% Calculate new eye point
		draw
		grestore
	} if
} def


% HHK colors
/hhkblue {0.06 0.156 0.414 setrgbcolor} def
/white {1 setgray} def

% Parameters
/scaling 1 def
/origo [0 0 0] def
/shrink 0.2 def


% Draw 
5 {
	% Axes
	/du 0.9 scaling mul def
	/dx [du 0 0] def
	/dy [0 du 0] def
	/dz [0 0 du] def

	% Define cubes
	/level {exch scaling mul exch scaling mul dup 0.5 mul exch 1.1 mul} def
	/cube1 [-2 0 level] origo vadd dx dy dz cube def
	/cube2 [ 0 0 level] origo vadd dx dy dz cube def
	/cube3 [-1 1 level] origo vadd dx dy dz cube def
	/cube4 [ 1 1 level] origo vadd dx dy dz cube def
	/cube5 [ 0 2 level] origo vadd dx dy dz cube def

	% Draw
	draw

	% Find center of cubes
	/bbox [[cube1 cube2 cube3 cube4 cube5] {{aload pop} forall}
		forall] 3Dbbox def
	/center [
		bbox 0 get bbox 1 get add 2 div
		bbox 2 get bbox 3 get add 2 div
		bbox 4 get bbox 5 get add 2 div] def
	/center4 [1 1 level] def

	% Translate and scale 
	/origo origo center4 vadd 
		[du du du] 0.5 smul vsub
		[-2 0 level] shrink smul vsub
		[du du du] 0.5 shrink mul smul vadd
		[-0.8 4 0] du 0.5 mul shrink mul smul vadd
%		center origo vsub shrink smul vsub 
%		[du du du] shrink 0 mul smul vsub 
		def
	/scaling scaling shrink mul def

%		center scaling smul vsub def
	invertcolors
} repeat

showpage

% Close
PSMclose

%%Trailer
cleartomark countdictstack exch sub { end } repeat restore
%%EOF

%%EndDocument
 @endspecial 585 2891 a(Center)g(f)-5 b(or)45 b(Computational)g
(Modelling)f(of)i(Language)850 3092 y(Depar)7 b(tment)45
b(of)h(Computational)e(Linguistics)1257 3293 y(Copenhagen)i(Business)e
(School)1415 3494 y(http://www)-10 b(.id.cbs)n(.dk/)p
Ff(\030)p Fg(mtk)p Black 4382 3736 a Fe(1)p Black eop
end
%%Page: 2 2
TeXDict begin @landscape 2 1 bop Black Black 0 0 1 TeXcolorrgb
0 0 1 TeXcolorrgb 2 583 5075 241 v 0 0 1 TeXcolorrgb
Black 1 TeXcolorgray 44 506 a Fd(1.)56 b(Construction)47
b(of)f(DDT)g(annotated)g(Danish)g(par)s(t)g(of)g(So\002e)g(treebank)p
Black 0 0 1 TeXcolorrgb Black 2 833 a Fg(The)66 b(DDT)-23
b(-annotated)65 b(par)7 b(t)65 b(of)h(the)f(par)n(allel)g(So\002e)h
(treebank)f(consists)2 1066 y(of)p 0 0 1 TeXcolorrgb
62 w Fd(100)d(sentences)p Black 62 w Fg(annotated)g(according)e(to)j
(the)p 0 0 1 TeXcolorrgb 62 w Fd(DDT)g(annotation)2 1298
y(sc)n(heme)p Black 46 w Fg(\(http://www)-10 b(.id.cbs)n(.dk/)p
Ff(\030)p Fg(mtk/treebank\).)2 1625 y(The)65 b(treebank)g(has)g(been)g
(constr)r(ucted)f(b)m(y)p 0 0 1 TeXcolorrgb 65 w Fd(man)n(ual)i
(annotation)p Black Fg(,)k(at)2 1858 y(a)p 0 0 1 TeXcolorrgb
64 w Fd(rate)65 b(of)f(1.000\2261.500)g(w)m(or)m(ds)f(per)i(w)m(orking)
e(da)m(y)p Black Fg(.)112 b(The)64 b(P)-20 b(AR)m(OLE)2
2090 y(tag)51 b(\(the)f(\223msd\224)g(f)-5 b(eature\))51
b(w)n(as)f(created)g(with)h(a)p 0 0 1 TeXcolorrgb 51
w Fd(primitive)f(ta)n(g)n(g)r(er)i(and)2 2323 y(man)n(ual)71
b(post-editing)p Black 71 w Fg(\(I)h(could)e(ha)m(v)l(e)g(used)h(a)g
(Br)r(ill)g(tagger)g(f)-5 b(or)71 b(this)2 2555 y(task,)55
b(b)m(ut)e(I)h(didn't)f(ha)m(v)l(e)g(it)g(on)h(m)n(y)e(computer)-8
b(,)55 b(so)e(I)h(did)f(the)h(annotation)2 2788 y(with)46
b(a)g(simple)e(prog)n(r)n(am)i(instead\).)p Black 4382
3736 a Fe(2)p Black eop end
%%Page: 3 3
TeXDict begin @landscape 3 2 bop Black Black 0 0 1 TeXcolorrgb
0 0 1 TeXcolorrgb 2 584 3634 242 v 0 0 1 TeXcolorrgb
Black 1 TeXcolorgray 44 506 a Fd(2.)56 b(Choice)46 b(of)g(categor)r(y)g
(and)f(edg)r(e)h(labels)f(in)h(DDT)p Black 0 0 1 TeXcolorrgb
Black Black 152 881 a Ff(\017)p Black 0 0 1 TeXcolorrgb
83 w Fd(linguistic)f(theor)r(y)p Black Fg(:)57 b(dependency-based)p
Black 152 1113 a Ff(\017)p Black 0 0 1 TeXcolorrgb 83
w Fd(categor)r(y)46 b(labels)p Black Fg(:)58 b(encode)46
b(w)n(ord)h(class)f(and)g(mor)5 b(phological)45 b(f)-5
b(ea-)318 1346 y(tures)52 b(\(n)n(umber)-8 b(,)55 b(case)n(,)f(gender)
-8 b(,)54 b(v)l(erbal)e(in\003ection,)i(etc.\),)h(accord-)318
1578 y(ing)45 b(to)h(the)f(standards)g(from)h(the)f(EU)i(funded)e(P)-20
b(AR)m(OLE)46 b(project.)p Black 152 1810 a Ff(\017)p
Black 0 0 1 TeXcolorrgb 83 w Fd(edg)r(e)34 b(labels)p
Black Fg(:)51 b(complement)33 b(and)i(adjunct)f(labels)f(are)i(DDT)-23
b(-speci\002c)n(,)318 2043 y(b)m(ut)42 b(most)f(labels)h(are)g(also)g
(f)-5 b(ound)42 b(under)g(diff)-5 b(erent)42 b(names)g(in)g(other)318
2275 y(treebank)j(projects)n(.)2 2650 y(I)51 b(don't)e(kno)n(w)h
(whether)h(it)f(is)g(possib)m(le)e(to)p 1 0 0 TeXcolorrgb
50 w Fd(standar)m(diz)r(e)i(categor)r(y)g(and)2 2882
y(edg)r(e)45 b(labels)p Black Fg(,)h(b)m(ut)f(it)h(might)f(be)h(w)n(or)
7 b(th)46 b(a)f(tr)5 b(y)-17 b(.)p Black 4382 3736 a
Fe(3)p Black eop end
%%Page: 4 4
TeXDict begin @landscape 4 3 bop Black Black 0 0 1 TeXcolorrgb
0 0 1 TeXcolorrgb 2 584 5527 242 v 0 0 1 TeXcolorrgb
Black 1 TeXcolorgray 44 506 a Fd(3.)56 b(Comparing)47
b(DDT)f(anal)n(yses)f(with)g(other)h(anal)n(yses)f(in)h(the)g(So\002e)g
(treebank)p Black 0 0 1 TeXcolorrgb Black 1347 759 5
159 v 1432 712 a Fc(Bic)m(k)p 2410 759 V 776 w(Kr)m(omann)p
3474 759 V 463 w(Nivre)p 4538 759 V 718 w(V)-12 b(olk)p
2 764 5602 5 v 85 876 a(frame)n(w)m(ork)p 1347 923 5
159 v 654 w Fb(phr)o(ase)p 2410 923 V 642 w(dependency)p
3474 923 V 310 w(dependency)p 4538 923 V 309 w(phr)o(ase)p
2 928 5602 5 v 85 1040 a Fc(discont.)p 1347 1086 5 159
v 819 w Fb(y)m(es)p 2410 1086 V 852 w(y)m(es)p 3474 1086
V 852 w(no)p 4538 1086 V 909 w(y)m(es)p 2 1091 5602 5
v 85 1203 a Fc(\002ller)n(s/coref)o(erence)p 1347 1250
5 159 v 160 w Fb(no)p 2410 1250 V 910 w(y)m(es)p 3474
1250 V 852 w(no)p 4538 1250 V 909 w(no)p 2 1255 5602
5 v 85 1367 a Fc(NP/DP)39 b(anal.)p 1347 1413 5 159 v
574 w Fb(NP)p 2410 1413 V 873 w(DP)p 3474 1413 V 873
w(NP)p 4538 1413 V 872 w(par)o(ataxis)p 2 1418 5602 5
v 85 1530 a Fc(VP)f(compounds)p 1347 1577 5 159 v 345
w Fb(v)m(erb)f(cluster)p 2410 1577 V 354 w(nested)g(comps)p
3474 1577 V 205 w(nested)f(comps)p 4538 1577 V 205 w(nested)h(comps)p
2 1582 5602 5 v 85 1694 a Fc(coor)m(dination)p 1347 1740
5 159 v 516 w Fb(par)o(ataxis)p 2410 1740 V 504 w(modify)g(1st)p
3474 1740 V 436 w(modify)g(1st)p 4538 1740 V 435 w(par)o(ataxis)p
2 1745 5602 5 v 85 1857 a Fc(punctuation)p 1347 1904
5 159 v 559 w Fb(no)p 2410 1904 V 910 w(y)m(es)p 3474
1904 V 852 w(y)m(es)p 4538 1904 V 851 w(no)p 2 1909 5602
5 v 85 2021 a Fc(apposition)i(head)p 1347 2067 5 159
v 290 w Fb(1st)f(N)p 2410 2067 V 743 w(1st)g(N)p 3474
2067 V 743 w(2nd)f(N)p 4538 2067 V 696 w(par)o(ataxis)p
2 2072 5602 5 v 85 2184 a Fc(it-c)m(left:)47 b(it)38
b(...)48 b Fa(that)p 1347 2389 5 317 v 306 w Fb(f)l(or)s(mal/real)1432
2342 y(subject)p 2410 2389 V 2496 2184 a(it-complement)p
3474 2389 V 196 w(it-apposition)p 4538 2389 V 317 w(direct)37
b(object)p 2 2394 5602 5 v 85 2506 a Fc(comp/adj:)164
b(opst)1205 2504 y(\011)1190 2506 y(a)85 2664 y Fa(af)38
b(...)p 1347 2710 5 317 v 1432 2506 a Fb(sentential)107
b(ad-)1432 2664 y(junct)p 2410 2710 V 2496 2506 a(complement)p
3474 2710 V 311 w(adjunct)p 4538 2710 V 617 w(adjunct)p
2 2715 5602 5 v 85 2827 a Fc(discont.)180 b(AP:)83 b(s)1205
2825 y(\011)1190 2827 y(a)85 2985 y(lang)39 b(en)f(vej)f
Fa(som)p 1347 3031 5 317 v 1432 2827 a Fb(s)1516 2824
y(\011)1501 2827 y(a-adjunct)p 2410 3031 V 426 w(s)2580
2824 y(\011)2565 2827 y(a-adjunct)p 3474 3031 V 426 w(V)-11
b(-adjunct)p 4538 3031 V 490 w(N-adjunct)p 2 3036 5602
5 v 85 3148 a Fc(wh-c)m(lause:)211 b(VP1)85 3306 y Fa(wh)41
b Fc(VP2)p 1347 3353 5 317 v 1432 3148 a Fb(adjunct)100
b(within)1432 3306 y(VP2)p 2410 3353 V 2496 3148 a(wh+VP2)36
b(head,)2496 3306 y(VP2)i(\002ller)p 3474 3353 V 3560
3148 a(adjunct)99 b(within)3560 3306 y(VP2)p 4538 3353
V 4623 3148 a(adjunct)h(within)4623 3306 y(VP2)p 2 3358
5602 5 v Black 4382 3736 a Fe(4)p Black eop end
%%Page: 5 5
TeXDict begin @landscape 5 4 bop Black Black 0 0 1 TeXcolorrgb
0 0 1 TeXcolorrgb 2 584 4194 242 v 0 0 1 TeXcolorrgb
Black 1 TeXcolorgray 44 506 a Fd(4.)56 b(Strengths,)47
b(weaknesses,)d(threats)i(and)g(oppor)s(tunities)p Black
0 0 1 TeXcolorrgb Black 2 802 a Fg(W)-5 b(eaknesses)44
b(and)i(threats:)p Black 152 1146 a Ff(\017)p Black 1 0 0
TeXcolorrgb 83 w Fd(Impor)s(tant)g(diff)n(erences)p Black
46 w Fg(in)f(syntactic)f(analysis)n(.)p Black 152 1347
a Ff(\017)p Black 83 w Fg(A)p 1 0 0 TeXcolorrgb 46 w
Fd(common)h(anal)n(ysis)g(sc)n(heme)p Black 46 w Fg(is)g(unrealistic.)p
Black 152 1549 a Ff(\017)p Black 1 0 0 TeXcolorrgb 83
w Fd(T)-13 b(ranslation)45 b(between)g(frame)n(w)m(orks)p
Black 45 w Fg(is)g(lik)m(ely)f(to)i(be)g(dif\002cult.)2
1892 y(Strengths)f(and)h(oppor)7 b(tunities:)p Black
152 2235 a Ff(\017)p Black 83 w Fg(TIGER)59 b(XML)g(has)g(made)g(it)g
(easier)g(to)p 1 0 0 TeXcolorrgb 59 w Fd(compare)g(anal)n(yses)g(and)
318 2437 y(e)n(xc)n(hang)r(e)44 b(ideas)p Black Fg(.)p
Black 152 2638 a Ff(\017)p Black 1 0 0 TeXcolorrgb 83
w Fd(Common)68 b(edg)r(e)g(and)g(categor)r(y)g(labels)p
Black 68 w Fg(is)g(w)n(or)7 b(th)68 b(a)h(tr)5 b(y:)101
b(simi-)318 2840 y(lar)52 b(labels)g(should)g(get)h(a)g(standardiz)n
(ed)e(name)n(,)j(remaining)e(labels)318 3041 y(should)44
b(be)i(added)g(as)f(theor)5 b(y-speci\002c.)p Black 152
3243 a Ff(\017)p Black 1 0 0 TeXcolorrgb 83 w Fd(Standar)m(diz)r(ed)71
b(e)n(xtensions)h(of)h(TIGER)g(XML)p Black 72 w Fg(f)-5
b(or)73 b(spok)m(en)e(lan-)318 3444 y(guage)n(,)44 b(dialogue)n(,)h
(and)g(discourse)f(are)i(w)n(or)7 b(th)46 b(a)g(tr)5
b(y)-17 b(.)p Black 4382 3736 a Fe(5)p Black eop end
%%Page: 6 6
TeXDict begin @landscape 6 5 bop Black Black 0 0 1 TeXcolorrgb
0 0 1 TeXcolorrgb 2 583 3320 239 v 0 0 1 TeXcolorrgb
Black 1 TeXcolorgray 44 506 a Fd(5.)56 b(Pr)m(oposed)46
b(tasks)g(in)g(\224P)-5 b(arallel)45 b(treebanks\224)p
Black 0 0 1 TeXcolorrgb Black Black 152 881 a Ff(\017)p
Black 83 w Fg(Compare)40 b(and)h(document)e(e)-5 b(xisting)p
0 0 1 TeXcolorrgb 40 w Fd(categor)r(y)40 b(and)h(edg)r(e)f(labels)p
Black Fg(.)p Black 152 1113 a Ff(\017)p Black 83 w Fg(Create)46
b(an)f(inclusiv)l(e)f(set)h(of)p 0 0 1 TeXcolorrgb 46
w Fd(common)h(categor)r(y)f(labels)p Black Fg(.)p Black
152 1346 a Ff(\017)p Black 83 w Fg(Create)h(an)f(inclusiv)l(e)f(set)h
(of)p 0 0 1 TeXcolorrgb 46 w Fd(common)h(edg)r(e)f(labels)p
Black Fg(.)2 1720 y(The)h(f)-5 b(ollo)n(wing)44 b(task)h(is)h
(delegated)e(to)i(\224T)-20 b(ools)45 b(and)h(Resources\224:)p
Black 152 2094 a Ff(\017)p Black 83 w Fg(Standardiz)n(e)p
0 0 1 TeXcolorrgb 33 w Fd(e)n(xtensions)34 b(to)h(TIGER)g(XML)p
Black 35 w Fg(f)-5 b(or)35 b(spok)m(en)f(language)n(,)318
2326 y(dialogue)n(,)44 b(and)h(discourse)n(.)p Black
4382 3736 a Fe(6)p Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
