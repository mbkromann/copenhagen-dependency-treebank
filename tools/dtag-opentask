#!/bin/bash 

# Find name and exit if missing
echo > "$HOME/.script"
name=`cat ~/.cdtname` 
if [ -z "$name" ] ; then
	echo "Please provide your first name with the command 'setname your-name'"
	echo "using small letters only, then try the 'opentask' command again."
	exit 1
fi

# Check that todo file exists
todo=~/cdt/todo/$name
if [ ! -f "$todo" ] ; then
	echo "No todo-file for $name: please check your first name and set"
	echo "it again with 'setname' if wrong, otherwise contact Matthias."
	exit 1
fi

# Find first incomplete task
file=`grep '\[ \]' "$todo" | head -1 | sed -e 's/\[.\] //g'`
dir=`echo $file | sed -e 's/\/.*$//g'`
fname=`echo $file | sed -e 's/^.*\///g'`
if [ -z "$fname" ] ; then
	echo "No more tasks: please ask Matthias to give you more tasks"
	echo > ~/.script
	exit 1
fi

# Reset script file
mkdir -p ~/backup
echo "save ~/backup/backup-`date +%F-%H.%M.%S`" > ~/.script
echo "close -all" >> ~/.script
echo "cd ~/cdt/$dir" >> ~/.script


# Process alignment task 
if echo $fname | grep '.atag' ; then
	# Alignment task
	echo "Alignment task"

	# Try to create file if non-existent
	if [ ! -f "$HOME/cdt/$dir/$fname" ] ; then
		cd "$HOME/cdt/$dir"
		rfname=`echo $fname | sed -e 's/-[^-]*$//g'`
		if [ -f $rfname-auto.atag ] ; then
			echo "Copying $fname from $rfname-auto.atag"
			svn cp $rfname-auto.atag $fname
		fi
	fi

	# Load file if it exists
	if [ -f "$HOME/cdt/$dir/$fname" ] ; then
		echo "cd ~/cdt/$dir" >> ~/.script
		echo "load $fname" >> ~/.script
		echo "autoalign -default *.atag" >> ~/.script
		echo "# Stop autoaligner with \"autoalign -off\"" >> ~/.script
	else
		echo "ERROR: cannot open/create file $file"
		echo "Please contact Matthias if you think this is an error"
	fi
fi

# Process dependency annotation task
if echo $fname | grep '\.tag' > /dev/null ; then
	# Dependency annotation task
	echo "Dependency annotation task: $fname"
	rfname=`echo $fname | sed -e 's/^\([^-]*-[^-]*\)-.*$/\1/g'`

	# Try to create file if non-existent
	if [ ! -f "$HOME/cdt/$dir/$fname" ] ; then
		# Create file from auto tag-file
		if [ -f "$HOME/cdt/$dir/$rfname-auto.tag" ] ; then
			echo "Copying $fname from $rfname-auto.tag" 
			svn cp "$HOME/cdt/$dir/$rfname-auto.tag" "$HOME/cdt/$dir/$fname"
			echo "tag source: $rfname-auto.tag"
		elif [ -f "$HOME/cdt/$dir/$rfname-tagged.tag" ] ; then
			echo "Copying $fname from $rfname-tagged.tag" 
			svn cp "$HOME/cdt/$dir/$rfname-tagged.tag" "$HOME/cdt/$dir/$fname"
			echo "tag source: $rfname-tagged.tag"
		fi
	fi

	# Aparse the file if it contains no dependency edges
	if [ -f "$HOME/cdt/$dir/$fname" ] ; then
	        cd "$HOME"/cdt
		if egrep 'in="[^"]' $fname > /dev/null ; then
			echo "File contains dependency edges"
		else 
			# Identify id and language
			id=`echo $rfname | awk -F'-' '{ print $1 }'`
			lang=`echo $rfname | awk -F'-' '{ print $2 }'`

			# Find atag-file
			atagfiles=`ls *-$lang/$id-*-$lang*.atag`

			
			echo "atagfiles" $atagfiles

			# Prefer final atag file with ending $lang.atag
			atag=`echo $atagfiles | grep "$lang.atag" | head -1`
			method="final"

			# Otherwise prefer user's own atag file
			if [ -z "$atag" ] ; then
				atag=`echo $atagfiles | grep "$lang-$user.atag" | head -1`
				method="user's own"
			fi

			# Otherwise prefer the largest other atag file
			if [ -z "$atag" ] ; then
				atag=`du -s *-$lang/$id-*-$lang*.atag \
					| sort -nr | head -1 | awk '{ print $2 }'`
				method="largest match"
			fi

			# Find atag-file and atag dir
			atagdir=`echo $atag | sed -e 's/\/[^\/]*$//g'`
			atagname=`echo $atag | sed -e 's/^.*\/\([^\]*\)$/\1/g'`
			echo "atag-file: $atag [$method]"
			echo "atag-dir : $atagdir"

			# Aparse file
			if [ -f "$lang/$id-$lang-auto.tag" ] ; then
				echo "cd ~/cdt/$atagdir" >> ~/.script
				echo "load ../$lang/$id-$lang-auto.tag" >> ~/.script
				echo "aparse $atagname" >> ~/.script
				echo "cd ~/cdt/$dir" >> ~/.script
				#echo "save $fname" >> ~/.script
				echo "close -all" >> ~/.script
			fi
		fi
	fi

	# Load file if it exists
	if [ -f "$HOME/cdt/$dir/$fname" ] ; then
		echo "cd ~/cdt/$dir"
		echo "load $fname" >> ~/.script
		echo "del -off" >> ~/.script
	else
		echo "ERROR: cannot find file $file"
	fi
fi
	
