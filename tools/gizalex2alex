#!/usr/bin/perl

# Parameters
my $dir = "tmp";
my $slang = "da";
my $tlang = "it"; 

# Paths
my $swordsfn = "$dir/words.$slang";
my $twordsfn = "$dir/words.$tlang";
my $lexfn = "$dir/$slang-$tlang.lex";
my $invlexfn = "$dir/$tlang-$slang.lex";

# Clean word wrt. punctuation and case
sub cleanword {
	my $word = shift;
	$word =~ s/\W//g;
	return lc($word);
}

# Read wordlist from file
sub readwords {
	my $file = shift;
	my $hash = {};
	open(WORDS, "<$file");
	while (my $line = <WORDS>) {
		chomp($line);
		$hash->{cleanword($line)};
	}
	return $hash;
}	

# Open lexicon
sub readlex {
	my $file = shift;
	my $slex = shift;
	my $tlex = shift;
	my $hash = {};

	# Read file
	open(LEX, "<$file"); 
	while (my $line = <LEX>) {
		# Read line
		chomp($line);
		my ($sword, $tword, $prob) = map {cleanword($_)} split(/\s+/, $line);

		# Store translation
		if ($slex->{$sword} && $tlex->{$tword}) {
			$hash->{$sword} = {} if (! exists $hash->{$sword});
			$hash->{$sword}{$tword} = $prob;
			print "$sword <=> $tword ($prob)\n";
		}
	}
	close(LEX);

	# Return lexicon
	return $hash;
}

# Main: read files
my $swords = readwords($swordsfn);
my $twords = readwords($twordsfn);
my $lexhash = readlex($lex, $swords, $twords);
my $invlexhash = readlex($invlex, $twords, $swords);

# Find intersection of the two alignments
my $hash = {};
foreach my $sword (sort(keys(%$lexhash))) {
	foreach my $tword (keys(%{$lexhash->{$sword}})) {
		my $prob = $lexhash->{$sword}{$tword};
		my $invprob = (exists $invlexhash->{$tword}) ? 
			($invlexhash->{$tword}{$sword} || 0) : 0;

		if ($prob > 0 && $invprob > 0) {
			$hash->{$sword} = {} if (! exists $hash->{$sword});
			$hash->{$sword}{$tword} = $prob * $invprob;
		}
	}
}

# Print lexicon
foreach my $sword (sort(keys(%$hash))) {
	my $thash = $hash->{$sword};
	print "$sword: ";
	print join(" ", map {$_ . "/" . $thash->{$_}} 
		sort {$thash->{$b} <=> $thash->{$a}} keys(%$thash));
	print "\n";
}

